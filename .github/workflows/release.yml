name: Create release
on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:
    inputs:
      version:
        description: The version of the release. Will be passed to npm version, so you can use patch, minor and major as well.
        required: true
        default: patch

jobs:
  release:
    runs-on: windows-latest
    env:
      RESOURCE_HACKER_EXECUTABLE: .\reshack\ResourceHacker.exe
    outputs:
      url: ${{ steps.gh-release.outputs.upload_url }}
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release'))
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - name: Configure Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install
        run: npm ci

      # Find the version to use in npm version from either the PR or the workflow dispatch.
      - id: get-tag
        uses: ./.github/actions/get-tag
        with:
          version: ${{ github.event.inputs.version }}

      # Perform the version bump
      - name: Bump version
        run: npm version ${{ steps.get-tag.outputs.version }}

      # Read in the package.json version and make it available as outputs.version.
      - id: read-version
        name: Read version
        uses: ./.github/actions/get-version

      - name: Build
        run: npm run build:exe

      # Push the version bump
      - name: Push version bump
        run: git push origin main

      # Inject the icons & update the exe information with ResourceHacker.
      - name: Install ResourceHacker
        run: |
          Invoke-WebRequest -Uri "http://www.angusj.com/resourcehacker/resource_hacker.zip" -OutFile "resource_hacker.zip"
          Expand-Archive -Path "resource_hacker.zip" -DestinationPath "$PWD\reshack"
      - name: Inject icons
        run: npm run build:icons

      # Release baby
      - name: Create release
        id: gh-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.read-version.outputs.version }}
          generate_release_notes: true
          files: dist/sc4.exe

  linux:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - run: npm ci
      - name: Build
        run: |
          npm run build
          node -e "const fs = require('fs');if(!fs.existsSync('dist'))fs.mkdirSync('dist');fs.writeFileSync('dist/version.txt', require('./package.json').version)"
          npm run build:bundle
          node --experimental-sea-config build/sea-config.json
          cp $(command -v node) dist/sc4
          chmod +x dist/sc4
          npx postject dist/sc4 NODE_SEA_BLOB dist/sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 

      - name: Upload asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ needs.release.outputs.url }}
          ASSET_PATH: ./dist/sc4
        shell: bash
        run: |
          UPLOAD_URL=$(echo "$UPLOAD_URL" | sed 's/{?name,label}//')"?name=sc4&label=sc4%20(linux)"
          echo $UPLOAD_URL

          curl -L \
          -X POST \
          --fail-with-body \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          $UPLOAD_URL \
          --data-binary "@$ASSET_PATH"

  publish:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          # Explicitly checkout the main branch because the npm version commit 
          # has been pushed, which is not automatically checked out because by 
          # default only the commit that triggered the workflow is checked out.
          ref: main
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm run build
      - id: read-version
        name: Read version
        uses: ./.github/actions/get-version
      - name: Publish
        run: npm publish --provenance --tag ${{ steps.read-version.outputs.npm-tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
      - name: Remove latest tag
        if: steps.read-version.outputs.npm-tag == 'latest'
        continue-on-error: true
        run: npm dist-tag rm sc4 next
